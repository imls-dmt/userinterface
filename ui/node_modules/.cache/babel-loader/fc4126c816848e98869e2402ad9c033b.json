{"remainingRequest":"/Users/karl/Repos/dmtc-userinterface/ui/node_modules/babel-loader/lib/index.js!/Users/karl/Repos/dmtc-userinterface/ui/node_modules/eslint-loader/index.js??ref--13-0!/Users/karl/Repos/dmtc-userinterface/ui/src/store/auth.module.js","dependencies":[{"path":"/Users/karl/Repos/dmtc-userinterface/ui/src/store/auth.module.js","mtime":1625860757797},{"path":"/Users/karl/Repos/dmtc-userinterface/ui/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/karl/Repos/dmtc-userinterface/ui/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/karl/Repos/dmtc-userinterface/ui/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IEF1dGhTZXJ2aWNlIGZyb20gJy4uL3NlcnZpY2VzL2F1dGguc2VydmljZSc7CmltcG9ydCBVc2VyU2VydmljZSBmcm9tICcuLi9zZXJ2aWNlcy91c2VyLnNlcnZpY2UnOyAvL2NvbnN0IGxvZ2luUmVzdWx0ID0gSlNPTi5wYXJzZShsb2NhbFN0b3JhZ2UuZ2V0SXRlbSgnbG9naW5SZXN1bHQnKSk7Ci8vY29uc3QgaW5pdGlhbFN0YXRlID0gbG9naW5SZXN1bHQuc3RhdHVzID09ICJzdWNjZXNzIgovLwk/IHsgc3RhdHVzOiB7IGxvZ2dlZEluOiB0cnVlIH0gfQovLwk6IHsgc3RhdHVzOiB7IGxvZ2dlZEluOiBmYWxzZSB9IH07Cgpjb25zdCBpbml0aWFsU3RhdGUgPSB7CiAgd29ya2luZzogZmFsc2UsCiAgdXNlcjogewogICAgbG9nZ2VkSW46IGZhbHNlLAogICAgdXNlcm5hbWU6ICIiCiAgfSwKICBncm91cHM6IFtdCn07CmV4cG9ydCBjb25zdCBhdXRoID0gewogIG5hbWVzcGFjZWQ6IHRydWUsCiAgc3RhdGU6IGluaXRpYWxTdGF0ZSwKICBnZXR0ZXJzOiB7CiAgICBmdWxsU3RhdGU6IHN0YXRlID0+IHN0YXRlLAogICAgdXNlcjogc3RhdGUgPT4gc3RhdGUudXNlciwKICAgIGxvZ2dlaW46IHN0YXRlID0+IHN0YXRlLnVzZXIubG9nZ2VkSW4sCiAgICB1c2VybmFtZTogc3RhdGUgPT4gc3RhdGUudXNlci51c2VybmFtZSwKICAgIGdyb3Vwczogc3RhdGUgPT4gc3RhdGUuZ3JvdXBzLAogICAgd29ya2luZzogc3RhdGUgPT4gc3RhdGUud29ya2luZwogIH0sCiAgYWN0aW9uczogewogICAgbG9naW4oewogICAgICBjb21taXQKICAgIH0sIHVzZXIpIHsKICAgICAgY29tbWl0KCdzZXRXb3JraW5nJywgdHJ1ZSk7CiAgICAgIHJldHVybiBBdXRoU2VydmljZS5sb2dpbih1c2VyKS50aGVuKHJlc3VsdCA9PiB7CiAgICAgICAgaWYgKHJlc3VsdC5zdGF0dXMgPT0gInN1Y2Nlc3MiKSB7CiAgICAgICAgICBjb21taXQoJ2xvZ2luU3VjY2VzcycpOwogICAgICAgICAgY29tbWl0KCdzZXRVc2VybmFtZScsIHVzZXIudXNlcm5hbWUpOwogICAgICAgICAgY29tbWl0KCdzZXRXb3JraW5nJywgZmFsc2UpOwogICAgICAgICAgcmV0dXJuIFByb21pc2UucmVzb2x2ZSh1c2VyKTsKICAgICAgICB9IGVsc2UgewogICAgICAgICAgY29tbWl0KCdsb2dpbkZhaWx1cmUnKTsKICAgICAgICAgIGNvbW1pdCgnc2V0V29ya2luZycsIGZhbHNlKTsKICAgICAgICAgIHJldHVybiBQcm9taXNlLnJlc29sdmUodXNlcik7CiAgICAgICAgfQogICAgICB9LCBlcnJvciA9PiB7CiAgICAgICAgY29tbWl0KCdsb2dpbkZhaWx1cmUnKTsKICAgICAgICBjb21taXQoJ3NldFdvcmtpbmcnLCBmYWxzZSk7CiAgICAgICAgcmV0dXJuIFByb21pc2UucmVqZWN0KGVycm9yKTsKICAgICAgfSk7CiAgICB9LAoKICAgIGxvZ291dCh7CiAgICAgIGNvbW1pdAogICAgfSkgewogICAgICBjb21taXQoJ3NldFdvcmtpbmcnLCB0cnVlKTsKICAgICAgQXV0aFNlcnZpY2UubG9nb3V0KCk7CiAgICAgIGNvbW1pdCgnbG9nb3V0Jyk7CiAgICAgIGNvbW1pdCgnc2V0V29ya2luZycsIGZhbHNlKTsKICAgIH0sCgogICAgZ2V0R3JvdXBzKHsKICAgICAgY29tbWl0CiAgICB9KSB7CiAgICAgIGNvbW1pdCgnc2V0V29ya2luZycsIHRydWUpOwogICAgICByZXR1cm4gVXNlclNlcnZpY2UuZ2V0R3JvdXBzKCkudGhlbihyZXN1bHQgPT4gewogICAgICAgIGNvbnNvbGUubG9nKHJlc3VsdCk7CiAgICAgICAgY29tbWl0KCdzZXRHcm91cHMnLCByZXN1bHQpOwogICAgICAgIGNvbW1pdCgnc2V0V29ya2luZycsIGZhbHNlKTsKICAgICAgfSk7CiAgICB9CgogIH0sCiAgbXV0YXRpb25zOiB7CiAgICBsb2dpblN1Y2Nlc3Moc3RhdGUpIHsKICAgICAgc3RhdGUudXNlci5sb2dnZWRJbiA9IHRydWU7CiAgICAgIGNvbnNvbGUubG9nKHN0YXRlKTsKICAgIH0sCgogICAgbG9naW5GYWlsdXJlKHN0YXRlKSB7CiAgICAgIHN0YXRlLnVzZXIubG9nZ2VkSW4gPSBmYWxzZTsKICAgICAgc3RhdGUudXNlci51c2VybmFtZSA9IG51bGw7CiAgICAgIGNvbnNvbGUubG9nKHN0YXRlKTsKICAgIH0sCgogICAgbG9nb3V0KHN0YXRlKSB7CiAgICAgIHN0YXRlLnVzZXIubG9nZ2VkSW4gPSBmYWxzZTsKICAgICAgc3RhdGUudXNlci51c2VybmFtZSA9IG51bGw7CiAgICAgIGNvbnNvbGUubG9nKHN0YXRlKTsKICAgIH0sCgogICAgc2V0VXNlcm5hbWUoc3RhdGUsIHVzZXJuYW1lKSB7CiAgICAgIHN0YXRlLnVzZXIudXNlcm5hbWUgPSB1c2VybmFtZTsKICAgICAgY29uc29sZS5sb2coc3RhdGUpOwogICAgfSwKCiAgICBzZXRHcm91cHMoc3RhdGUsIGdyb3VwcykgewogICAgICBzdGF0ZS5ncm91cHMgPSBncm91cHM7CiAgICAgIGNvbnNvbGUubG9nKHN0YXRlKTsKICAgIH0sCgogICAgc2V0V29ya2luZyhzdGF0ZSwgd29ya2luZ1N0YXRlKSB7CiAgICAgIHN0YXRlLndvcmtpbmcgPSB3b3JraW5nU3RhdGU7CiAgICAgIGNvbnNvbGUubG9nKHN0YXRlKTsKICAgIH0KCiAgfQp9Ow=="},{"version":3,"sources":["/Users/karl/Repos/dmtc-userinterface/ui/src/store/auth.module.js"],"names":["AuthService","UserService","initialState","working","user","loggedIn","username","groups","auth","namespaced","state","getters","fullState","loggein","actions","login","commit","then","result","status","Promise","resolve","error","reject","logout","getGroups","console","log","mutations","loginSuccess","loginFailure","setUsername","setGroups","setWorking","workingState"],"mappings":"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","sourcesContent":["import AuthService from '../services/auth.service';\nimport UserService from '../services/user.service';\n\n//const loginResult = JSON.parse(localStorage.getItem('loginResult'));\n//const initialState = loginResult.status == \"success\"\n//\t? { status: { loggedIn: true } }\n//\t: { status: { loggedIn: false } };\n\nconst initialState = {\n\tworking: false,\n\tuser: {\n\t\tloggedIn: false,\n\t\tusername: \"\",\n\t},\n\tgroups: [],\t\n}\n\nexport const auth = {\n\tnamespaced: true,\n\tstate: initialState,\n\tgetters: {\n\t\tfullState: state => state,\n\t\tuser: state => state.user,\n\t\tloggein: state => state.user.loggedIn,\n\t\tusername: state => state.user.username,\n\t\tgroups: state => state.groups,\n\t\tworking: state => state.working,\n\t},\n\tactions: {\n\t\tlogin({ commit }, user) {\n\t\t\tcommit('setWorking', true);\n\t\t\treturn AuthService.login(user).then(\n\t\t\t\tresult => {\n\t\t\t\t\tif (result.status == \"success\") {\n\t\t\t\t\t\tcommit('loginSuccess');\n\t\t\t\t\t\tcommit('setUsername', user.username);\n\t\t\t\t\t\tcommit('setWorking', false);\n\t\t\t\t\t\treturn Promise.resolve(user);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tcommit('loginFailure');\n\t\t\t\t\t\tcommit('setWorking', false);\n\t\t\t\t\t\treturn Promise.resolve(user);\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\terror => {\n\t\t\t\t\tcommit('loginFailure');\n\t\t\t\t\tcommit('setWorking', false);\n\t\t\t\t\treturn Promise.reject(error);\n\t\t\t\t}\n\t\t\t);\n\t\t},\n\t\tlogout({ commit }) {\n\t\t\tcommit('setWorking', true);\n\t\t\tAuthService.logout();\n\t\t\tcommit('logout');\n\t\t\tcommit('setWorking', false);\n\t\t},\n\t\tgetGroups({ commit }) {\n\t\t\tcommit('setWorking', true);\n\t\t\treturn UserService.getGroups().then(\n\t\t\t\tresult => {\n\t\t\t\t\tconsole.log(result);\n\t\t\t\t\tcommit('setGroups', result);\n\t\t\t\t\tcommit('setWorking', false);\n\t\t\t\t}\n\t\t\t)\n\t\t}\n\t},\n\tmutations: {\n\t\tloginSuccess(state) {\n\t\t\tstate.user.loggedIn = true;\n\t\t\tconsole.log(state);\n\t\t},\n\t\tloginFailure(state) {\n\t\t\tstate.user.loggedIn = false;\n\t\t\tstate.user.username = null;\n\t\t\tconsole.log(state)\n\t\t},\n\t\tlogout(state) {\n\t\t\tstate.user.loggedIn = false;\n\t\t\tstate.user.username = null;\n\t\t\tconsole.log(state)\n\t\t},\n\t\tsetUsername(state, username) {\n\t\t\tstate.user.username = username;\n\t\t\tconsole.log(state)\n\t\t},\n\t\tsetGroups (state, groups) {\n\t\t\tstate.groups = groups;\n\t\t\tconsole.log(state)\n\t\t},\n\t\tsetWorking (state, workingState) {\n\t\t\tstate.working = workingState;\n\t\t\tconsole.log(state)\n\t\t}\n\t}\n};\n"]}]}